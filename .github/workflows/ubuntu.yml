name: Ubuntu

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: Ubuntu ${{ matrix.compiler }} {{ matrix.version }} C++${{ matrix.cpp }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-20.04]
        cpp: [20]
        compiler: [gcc, clang]
        version: [""]
        include: 
          - compiler: gcc
            version: 10
          - compiler: gcc
            version: 11
          - compiler: clang
            version: 12
          - compiler: clang
            version: 13
        
    env:
      CPP_STANDARD: ${{ matrix.cpp }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
          
      - name: set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.version }}
          platform: x64
        if: matrix.compiler == 'clang'

      - name: set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.version }}
          platform: x64
        if: matrix.compiler == 'gcc'
      
      - name: configure
        run: cmake -S . -B build -DTP_BUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=Debug

      - name: build
        run: cmake --build build -j4

      - name: test
        run: |
          cd build
          ctest --build-config Debug
